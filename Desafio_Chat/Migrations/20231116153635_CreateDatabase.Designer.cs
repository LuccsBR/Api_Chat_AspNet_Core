// <auto-generated />
using System;
using Loja.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio_Chat.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231116153635_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Desafio_Chat.Models.Mensagens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Id_Usuario_EEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Id_Usuario_REmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<bool>("New")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("horario")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario_EEmail");

                    b.HasIndex("Id_Usuario_REmail");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("Desafio_Chat.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Desafio_Chat.Models.Mensagens", b =>
                {
                    b.HasOne("Desafio_Chat.Models.User", "Id_Usuario_E")
                        .WithMany()
                        .HasForeignKey("Id_Usuario_EEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Desafio_Chat.Models.User", "Id_Usuario_R")
                        .WithMany()
                        .HasForeignKey("Id_Usuario_REmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_Usuario_E");

                    b.Navigation("Id_Usuario_R");
                });
#pragma warning restore 612, 618
        }
    }
}
